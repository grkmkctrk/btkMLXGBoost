# -*- coding: utf-8 -*-
"""XGBoost.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1lX1VuvjZbdXRmgbHpL-uOxr9hOp8_RCi
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

veriler = pd.read_csv('/content/Churn_Modelling.csv')

X = veriler.iloc[:, 3:-1]
Y = veriler.iloc[:, -1]

x = X.values
y = Y.values

"""**Kategorikden sayisal veriye gecis**"""
from sklearn import preprocessing
from sklearn.compose import ColumnTransformer # birden fazla ozelligi ayni anda ayri ayri donusturur | Hetorojen yapiyi alip tek seferde donusum yapar.

le = preprocessing.LabelEncoder()
x[:, 1] = le.fit_transform(x[:, 1])
x[:, 2] = le.fit_transform(x[:, 2])

ohe = ColumnTransformer(
    [("ohe", preprocessing.OneHotEncoder(dtype = 'float'), [1])],
    remainder = "passthrough" # kalanlari birak
)

x = ohe.fit_transform(x)
x = x[:, 1:]

from sklearn.model_selection import train_test_split

# verinin yuzde 66 si antrenman icin kullanilsin kalan yuzde 33'u test edilsin diye ayrdik
# random_state rastsal ayirma icin kullaniliyor ayni degeri alan her kod ayni ayrimi yapar
x_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.33, random_state = 0)

y_train

from xgboost import XGBClassifier
classifier = XGBClassifier()
classifier.fit(x_train, y_train)

y_pred = classifier.predict(x_test)

from sklearn.metrics import confusion_matrix

cm = confusion_matrix(y_pred, y_test)
cm

